{"version":3,"sources":["Components/Counter/Button/Button.module.css","Components/SetValueCounter/EntryDisplay/EntryDisplay.module.css","Components/Counter/Display/Display.tsx","Components/Counter/Button/Button.tsx","Components/SetValueCounter/EntryDisplay/EntryDisplay.tsx","bll/mainReducer.ts","app/App.tsx","reportWebVitals.ts","app/store.ts","index.tsx","app/App.module.css","Components/Counter/Display/Display.module.css"],"names":["module","exports","Display","props","className","s","inputWrapper","type","value","displayValue","maxValue","default","error","Button","onClick","onButtonClick","disabled","button","name","EntryDisplay","valueWrapper","text1","onChange","onChangeMaxValue","startValue","entryDisplayInput","onChangeStartValue","CHANGE_MAX_VALUE","CHANGE_START_VALUE","CHANGE_DISPLAY_VALUE","initialState","setStartValue","setMaxValue","setDisplayValue","App","state","useSelector","main","dispatch","useDispatch","useEffect","startValueFromLS","Number","localStorage","getItem","maxValueFromLS","counterWrapper","e","currentValue","currentTarget","buttonOnEntryDisplay","setItem","String","buttonsWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cde853d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3arLC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text1\":\"EntryDisplay_text1__1FDRq\",\"valueWrapper\":\"EntryDisplay_valueWrapper__1JOMk\",\"entryDisplayInput\":\"EntryDisplay_entryDisplayInput__327CX\",\"error\":\"EntryDisplay_error__2q_cj\"};","import React from 'react';\r\nimport s from './Display.module.css'\r\n\r\ntype DisplayProps = {\r\n    displayValue: string | number\r\n    maxValue: string | number\r\n}\r\nexport const Display = (props: DisplayProps) => {\r\n    return (\r\n        <div className={s.inputWrapper}>\r\n            <input type=\"text\" value={props.displayValue}\r\n                   className={props.displayValue === 'Incorrect value!' || props.displayValue === props.maxValue ? s.default + ' ' + s.error : s.default}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Button.module.css'\r\n\r\ntype ButtonProps = {\r\n    onButtonClick: () => void\r\n    name: string\r\n    disabled: boolean\r\n}\r\n\r\nexport const Button = (props: ButtonProps) => {\r\n    return (\r\n        <button onClick={props.onButtonClick} disabled={props.disabled} className={s.button}>{props.name}\r\n        </button>\r\n\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from './EntryDisplay.module.css'\r\n\r\ntype  EntryDisplayPropsType = {\r\n    maxValue: string | number\r\n    startValue: string | number\r\n    onChangeMaxValue: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onChangeStartValue: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\n\r\nexport const EntryDisplay = (props: EntryDisplayPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.valueWrapper}>\r\n                <div className={s.text1}>Max value:</div>\r\n                <input type=\"number\"\r\n                       value={props.maxValue}\r\n                       onChange={props.onChangeMaxValue}\r\n                       className={\r\n                           props.maxValue < '0'\r\n                           || props.maxValue === props.startValue\r\n                           || +props.maxValue < +props.startValue\r\n                               ? s.entryDisplayInput + ' ' + s.error\r\n                               : s.entryDisplayInput}/>\r\n            </div>\r\n            <div className={s.valueWrapper}>\r\n                <div className={s.text1}>Start value:</div>\r\n                <input type=\"number\" value={props.startValue} onChange={props.onChangeStartValue}\r\n                       className={props.startValue < '0' || props.maxValue === props.startValue ? s.entryDisplayInput + ' ' + s.error : s.entryDisplayInput}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const CHANGE_MAX_VALUE = 'CHANGE_MAX_VALUE'\r\nconst CHANGE_START_VALUE = 'CHANGE_START_VALUE'\r\nconst CHANGE_DISPLAY_VALUE = 'CHANGE_DISPLAY_VALUE'\r\n\r\n\r\nconst initialState = {\r\n    maxValue: 0,\r\n    startValue: 0,\r\n    displayValue: \"enter values and press 'set'\" as number | string\r\n}\r\nexport const mainReducer = (state: initialStateType = initialState, action: ActionsTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case CHANGE_MAX_VALUE: {\r\n            return {\r\n                ...state,\r\n                maxValue: action.maxValue\r\n            }\r\n\r\n        }\r\n        case CHANGE_START_VALUE: {\r\n            return {\r\n                ...state,\r\n                startValue: action.startValue\r\n            }\r\n        }\r\n        case CHANGE_DISPLAY_VALUE: {\r\n            return {\r\n                ...state,\r\n                displayValue: action.displayValue\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// ActionCreators\r\nexport const setStartValue = (startValue: number) => ({type: 'CHANGE_START_VALUE', startValue} as const)\r\nexport const setMaxValue = (maxValue: number) => ({type: 'CHANGE_MAX_VALUE', maxValue} as const)\r\nexport const setDisplayValue = (displayValue: number | string) => ({\r\n    type: 'CHANGE_DISPLAY_VALUE',\r\n    displayValue\r\n} as const)\r\n\r\n\r\n//types\r\nexport type initialStateType = typeof initialState\r\ntype setStartValueType = ReturnType<typeof setStartValue>\r\ntype setMaxValueType = ReturnType<typeof setMaxValue>\r\ntype setDisplayValueType = ReturnType<typeof setDisplayValue>\r\ntype ActionsTypes = setStartValueType | setMaxValueType | setDisplayValueType\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {Display} from \"../Components/Counter/Display/Display\";\r\nimport {Button} from \"../Components/Counter/Button/Button\";\r\nimport s from \"./App.module.css\"\r\nimport {EntryDisplay} from \"../Components/SetValueCounter/EntryDisplay/EntryDisplay\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from './store';\r\nimport {initialStateType, setDisplayValue, setMaxValue, setStartValue} from \"../bll/mainReducer\";\r\n\r\nfunction App() {\r\n    const state = useSelector<AppRootStateType, initialStateType>(state => state.main)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        let startValueFromLS = Number(localStorage.getItem(\"startValue\"))\r\n        let maxValueFromLS = Number(localStorage.getItem(\"maxValue\"))\r\n\r\n        dispatch(setStartValue(startValueFromLS))\r\n        dispatch(setMaxValue(maxValueFromLS))\r\n\r\n    }, [dispatch])\r\n\r\n    function onButtonIncClick() {\r\n        dispatch(setDisplayValue(+state.displayValue + 1))\r\n    }\r\n\r\n    function onButtonResetClick() {\r\n        dispatch(setDisplayValue(0))\r\n        dispatch(setMaxValue(0))\r\n        dispatch(setStartValue(0))\r\n    }\r\n\r\n    function onButtonSetClick() {\r\n        dispatch(setDisplayValue(state.startValue))\r\n        localStorage.setItem('maxValue', String(state.maxValue))\r\n        localStorage.setItem('startValue', String(state.startValue))\r\n    }\r\n\r\n    function onChangeMaxValue(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const currentValue = +e.currentTarget.value\r\n        if (currentValue < 0) {\r\n            dispatch(setDisplayValue('Incorrect value!'))\r\n            dispatch(setMaxValue(currentValue))\r\n        } else if (currentValue <= state.startValue) {\r\n            dispatch(setDisplayValue('Incorrect value!'))\r\n            dispatch(setMaxValue(currentValue))\r\n        } else {\r\n            dispatch(setDisplayValue(\"enter values and press 'set'\"))\r\n            dispatch(setMaxValue(currentValue))\r\n        }\r\n    }\r\n\r\n    function onChangeStartValue(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const currentValue = +e.currentTarget.value\r\n        if (currentValue < 0) {\r\n            dispatch(setDisplayValue('Incorrect value!'))\r\n            dispatch(setStartValue(currentValue))\r\n\r\n        } else if (+currentValue >= state.maxValue) {\r\n            dispatch(setStartValue(currentValue))\r\n            dispatch(setDisplayValue('Incorrect value!'))\r\n        } else {\r\n            setDisplayValue(\"enter values and press 'set'\")\r\n            dispatch(setStartValue(currentValue))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.App}>\r\n            <div className={s.counterWrapper}>\r\n                <EntryDisplay maxValue={state.maxValue} startValue={state.startValue}\r\n                              onChangeMaxValue={onChangeMaxValue}\r\n                              onChangeStartValue={onChangeStartValue}/>\r\n                <div className={s.buttonOnEntryDisplay}>\r\n                    <Button onButtonClick={onButtonSetClick} name={'set'}\r\n                            disabled={state.displayValue === 'Incorrect value!'}/></div>\r\n            </div>\r\n            <div className={s.counterWrapper}>\r\n                <Display displayValue={state.displayValue} maxValue={state.maxValue}/>\r\n                <div className={s.buttonsWrapper}>\r\n                    <Button onButtonClick={onButtonIncClick} name={'inc'}\r\n                            disabled={state.displayValue === 'enter values and press \\'set\\''\r\n                            || state.displayValue === 'Incorrect value!'\r\n                            || state.displayValue === state.maxValue}/>\r\n                    <Button onButtonClick={onButtonResetClick} name={'reset'}\r\n                            disabled={state.displayValue === 0 || state.displayValue === 'Incorrect value!' || state.displayValue === 'enter values and press \\'set\\''}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {mainReducer} from \"../bll/mainReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    main: mainReducer,\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer)\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2EL_X\",\"text\":\"App_text__33lVk\",\"counterWrapper\":\"App_counterWrapper__3Mko9\",\"buttonsWrapper\":\"App_buttonsWrapper__3zLTL\",\"buttonOnEntryDisplay\":\"App_buttonOnEntryDisplay__Fhsat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"Display_inputWrapper__2QYJS\",\"error\":\"Display_error__3o8P2\",\"default\":\"Display_default__1ium1\"};"],"sourceRoot":""}